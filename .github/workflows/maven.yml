name: Run SonarScanner
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: |
        sonar-scanner \-Dsonar.projectKey=your_project_key \-Dsonar.host.url=$SONAR_HOST_URL \-Dsonar.login=$SONAR_TOKEN
name: Install SonarScanner CLI
    run: |
      wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
      unzip sonar-scanner-cli-5.0.1.3006-linux.zip
      sudo mv sonar-scanner-5.0.1.3006-linux /opt/sonar-scanner
      echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH

    
name: Analyze with SonarQube
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    run: |
      sonar-scanner \-Dsonar.projectKey=your_project_key \-Dsonar.host.url=$SONAR_HOST_URL \-Dsonar.login=$SONAR_TOKEN
name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    
uses: actions/checkout@v4

    
name: Set up JDK 17
    uses: actions/setup-java@v4
    with:
      java-version: '17'
      distribution: 'temurin'
      cache: maven

    
name: Build with Maven
    run: mvn -B package --file pom.xml

    
name: Analyze with SonarQube
    uses: SonarSource/sonarqube-scan-action@v2.0.0
    with:
      args: >-Dsonar.projectKey=your_project_key-Dsonar.projectName=your_project_name
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
